# Markdown Consistency & Format Rules

## Critical Rules

- **File Structure**: Mỗi file .md phải có cấu trúc rõ ràng với heading chính (# Title) ở đầu file
- **Encoding**: Luôn sử dụng UTF-8 encoding, đặc biệt quan trọng cho tiếng Việt
- **Line Endings**: Sử dụng LF (Unix-style) line endings
- **Trailing Spaces**: Không có trailing spaces ở cuối các dòng
- **GitBook HTML Entities**: Preserve HTML entities như `&#x20;`, `&#x21;` - KHÔNG xoá khi cleanup
- **Empty Lines**: Kết thúc file bằng một dòng trống
- **Heading Hierarchy**: Tuân thủ thứ tự heading (h1 -> h2 -> h3), không skip levels theo GitBook rules
- **Text Formatting**: Sử dụng đúng syntax `**bold**`, `_italic_`, `~strikethrough~`, `` `code` ``
- **Code Blocks**: Sử dụng proper syntax highlighting với Prism-supported languages
- **Lists**: Proper indentation với Tab/Shift+Tab, support unordered, ordered, và task lists
- **Vietnamese Content**: Sử dụng đúng dấu câu và khoảng trắng tiếng Việt
- **Links**: Kiểm tra tất cả internal links có tồn tại và valid
- **Images**: Đảm bảo image paths đúng và file tồn tại
- **GitBook Formatting**: Preserve GitBook hint blocks `{% hint %}`, frontmatter, và special characters

## Examples

<example>
  Valid markdown file structure:
  ```markdown
  ---
  description: Description cho GitBook
  icon: shield
  ---
  
  # Tên Chương
  
  {% hint style="info" %}
  Hint block của GitBook
  {% endhint %}
  
  ## Phần 1
  
  Nội dung phần 1 với **bold text**, _italic_, và `inline code`.
  
  ### Phần con 1.1
  
  Chi tiết nội dung với HTML entities: &#x20;
  
  ```python
  def example():
      return "Proper syntax highlighting"
  ```
  
  - Unordered list item
  - [ ] Task list item
  
  > Block quote example
  
  ---
  
  ```
</example>

<example type="invalid">
  Invalid structure:
  ```markdown
  # Tên Chương
  #### Phần 1    // Skip levels - should be ##
  
  Nội dung có trailing spaces    
  
  [Broken link](non-existent-file.md)
  
  // ❌ WRONG: Removed GitBook HTML entities
  List item without entities
  
  // ❌ WRONG: No syntax highlighting
  ```
  code without language
  ```
  
  // ❌ WRONG: No final newline
  ```
</example>

  
  // ❌ WRONG: No final newline
  ```
</example>
